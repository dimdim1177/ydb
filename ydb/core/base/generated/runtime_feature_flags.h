// Auto-generated by ydb/core/base/generated/codegen/__main__.py, do not modify.
#pragma once
#include <util/system/types.h>
#include <atomic>
#include <tuple>

namespace NKikimrConfig {

    class TFeatureFlags;

} // namespace NKikimrConfig

namespace NKikimr {

class TRuntimeFeatureFlags {
public:
    TRuntimeFeatureFlags();

    // Tests are making copies during initialization
    TRuntimeFeatureFlags(const TRuntimeFeatureFlags& flags);
    TRuntimeFeatureFlags& operator=(const TRuntimeFeatureFlags& flags);

    // Allow implicit conversion and assignment from proto
    TRuntimeFeatureFlags(const NKikimrConfig::TFeatureFlags& flags);
    TRuntimeFeatureFlags& operator=(const NKikimrConfig::TFeatureFlags& flags);

    // Basic compatibility with proto
    void CopyFrom(const NKikimrConfig::TFeatureFlags& flags);
    void MergeFrom(const NKikimrConfig::TFeatureFlags& flags);

    // Replaces runtime flags from the specified proto
    // Flags marked (RequireRestart) = true are not updated
    void CopyRuntimeFrom(const NKikimrConfig::TFeatureFlags& flags);

    // Allow conversion to proto
    operator NKikimrConfig::TFeatureFlags() const;


    // Feature flag EnableSeparateSolomonShardForPDisk
    bool HasEnableSeparateSolomonShardForPDisk() const;
    bool GetEnableSeparateSolomonShardForPDisk() const;
    void SetEnableSeparateSolomonShardForPDisk(bool value);
    void ClearEnableSeparateSolomonShardForPDisk();

    // Feature flag UseForsetiSchedulerByDefaultForPDisk
    bool HasUseForsetiSchedulerByDefaultForPDisk() const;
    bool GetUseForsetiSchedulerByDefaultForPDisk() const;
    void SetUseForsetiSchedulerByDefaultForPDisk(bool value);
    void ClearUseForsetiSchedulerByDefaultForPDisk();

    // Feature flag EnableSeparateTrimThreadForPDisk
    bool HasEnableSeparateTrimThreadForPDisk() const;
    bool GetEnableSeparateTrimThreadForPDisk() const;
    void SetEnableSeparateTrimThreadForPDisk(bool value);
    void ClearEnableSeparateTrimThreadForPDisk();

    // Feature flag EnableSeparateSubmitThreadForPDisk
    bool HasEnableSeparateSubmitThreadForPDisk() const;
    bool GetEnableSeparateSubmitThreadForPDisk() const;
    void SetEnableSeparateSubmitThreadForPDisk(bool value);
    void ClearEnableSeparateSubmitThreadForPDisk();

    // Feature flag EnablePerOwnerChunkLimitForPDisk
    bool HasEnablePerOwnerChunkLimitForPDisk() const;
    bool GetEnablePerOwnerChunkLimitForPDisk() const;
    void SetEnablePerOwnerChunkLimitForPDisk(bool value);
    void ClearEnablePerOwnerChunkLimitForPDisk();

    // Feature flag TrimEntireDeviceOnStartup
    bool HasTrimEntireDeviceOnStartup() const;
    bool GetTrimEntireDeviceOnStartup() const;
    void SetTrimEntireDeviceOnStartup(bool value);
    void ClearTrimEntireDeviceOnStartup();

    // Feature flag EnableChunkGraceForPDisk
    bool HasEnableChunkGraceForPDisk() const;
    bool GetEnableChunkGraceForPDisk() const;
    void SetEnableChunkGraceForPDisk(bool value);
    void ClearEnableChunkGraceForPDisk();

    // Feature flag AllowConsistentOperationsForSchemeShard
    bool HasAllowConsistentOperationsForSchemeShard() const;
    bool GetAllowConsistentOperationsForSchemeShard() const;
    void SetAllowConsistentOperationsForSchemeShard(bool value);
    void ClearAllowConsistentOperationsForSchemeShard();

    // Feature flag EnableSchemeBoard
    bool HasEnableSchemeBoard() const;
    bool GetEnableSchemeBoard() const;
    void SetEnableSchemeBoard(bool value);
    void ClearEnableSchemeBoard();

    // Feature flag AllowYdbRequestsWithoutDatabase
    bool HasAllowYdbRequestsWithoutDatabase() const;
    bool GetAllowYdbRequestsWithoutDatabase() const;
    void SetAllowYdbRequestsWithoutDatabase(bool value);
    void ClearAllowYdbRequestsWithoutDatabase();

    // Feature flag EnableExternalSubdomains
    bool HasEnableExternalSubdomains() const;
    bool GetEnableExternalSubdomains() const;
    void SetEnableExternalSubdomains(bool value);
    void ClearEnableExternalSubdomains();

    // Feature flag AllowRecursiveMkDir
    bool HasAllowRecursiveMkDir() const;
    bool GetAllowRecursiveMkDir() const;
    void SetAllowRecursiveMkDir(bool value);
    void ClearAllowRecursiveMkDir();

    // Feature flag AllowHugeKeyValueDeletes
    bool HasAllowHugeKeyValueDeletes() const;
    bool GetAllowHugeKeyValueDeletes() const;
    void SetAllowHugeKeyValueDeletes(bool value);
    void ClearAllowHugeKeyValueDeletes();

    // Feature flag SendSchemaVersionToDatashard
    bool HasSendSchemaVersionToDatashard() const;
    bool GetSendSchemaVersionToDatashard() const;
    void SetSendSchemaVersionToDatashard(bool value);
    void ClearSendSchemaVersionToDatashard();

    // Feature flag EnableSchemeBoardCache
    bool HasEnableSchemeBoardCache() const;
    bool GetEnableSchemeBoardCache() const;
    void SetEnableSchemeBoardCache(bool value);
    void ClearEnableSchemeBoardCache();

    // Feature flag EnableSystemViews
    bool HasEnableSystemViews() const;
    bool GetEnableSystemViews() const;
    void SetEnableSystemViews(bool value);
    void ClearEnableSystemViews();

    // Feature flag EnableExternalHive
    bool HasEnableExternalHive() const;
    bool GetEnableExternalHive() const;
    void SetEnableExternalHive(bool value);
    void ClearEnableExternalHive();

    // Feature flag UseSchemeBoardCacheForSchemeRequests
    bool HasUseSchemeBoardCacheForSchemeRequests() const;
    bool GetUseSchemeBoardCacheForSchemeRequests() const;
    void SetUseSchemeBoardCacheForSchemeRequests(bool value);
    void ClearUseSchemeBoardCacheForSchemeRequests();

    // Feature flag CompileMinikqlWithVersion
    bool HasCompileMinikqlWithVersion() const;
    bool GetCompileMinikqlWithVersion() const;
    void SetCompileMinikqlWithVersion(bool value);
    void ClearCompileMinikqlWithVersion();

    // Feature flag ReadTableWithSnapshot
    bool HasReadTableWithSnapshot() const;
    bool GetReadTableWithSnapshot() const;
    void SetReadTableWithSnapshot(bool value);
    void ClearReadTableWithSnapshot();

    // Feature flag ImportantTabletsUseSystemPool
    bool HasImportantTabletsUseSystemPool() const;
    bool GetImportantTabletsUseSystemPool() const;
    void SetImportantTabletsUseSystemPool(bool value);
    void ClearImportantTabletsUseSystemPool();

    // Feature flag EnableOfflineSlaves
    bool HasEnableOfflineSlaves() const;
    bool GetEnableOfflineSlaves() const;
    void SetEnableOfflineSlaves(bool value);
    void ClearEnableOfflineSlaves();

    // Feature flag CheckDatabaseAccessPermission
    bool HasCheckDatabaseAccessPermission() const;
    bool GetCheckDatabaseAccessPermission() const;
    void SetCheckDatabaseAccessPermission(bool value);
    void ClearCheckDatabaseAccessPermission();

    // Feature flag AllowOnlineIndexBuild
    bool HasAllowOnlineIndexBuild() const;
    bool GetAllowOnlineIndexBuild() const;
    void SetAllowOnlineIndexBuild(bool value);
    void ClearAllowOnlineIndexBuild();

    // Feature flag EnablePersistentQueryStats
    bool HasEnablePersistentQueryStats() const;
    bool GetEnablePersistentQueryStats() const;
    void SetEnablePersistentQueryStats(bool value);
    void ClearEnablePersistentQueryStats();

    // Feature flag DisableDataShardBarrier
    bool HasDisableDataShardBarrier() const;
    bool GetDisableDataShardBarrier() const;
    void SetDisableDataShardBarrier(bool value);
    void ClearDisableDataShardBarrier();

    // Feature flag EnablePutBatchingForBlobStorage
    bool HasEnablePutBatchingForBlobStorage() const;
    bool GetEnablePutBatchingForBlobStorage() const;
    void SetEnablePutBatchingForBlobStorage(bool value);
    void ClearEnablePutBatchingForBlobStorage();

    // Feature flag EnableKqpWideFlow
    bool HasEnableKqpWideFlow() const;
    bool GetEnableKqpWideFlow() const;
    void SetEnableKqpWideFlow(bool value);
    void ClearEnableKqpWideFlow();

    // Feature flag EnableKqpScanQueries
    bool HasEnableKqpScanQueries() const;
    bool GetEnableKqpScanQueries() const;
    void SetEnableKqpScanQueries(bool value);
    void ClearEnableKqpScanQueries();

    // Feature flag EnablePersistentPartitionStats
    bool HasEnablePersistentPartitionStats() const;
    bool GetEnablePersistentPartitionStats() const;
    void SetEnablePersistentPartitionStats(bool value);
    void ClearEnablePersistentPartitionStats();

    // Feature flag EnableTtlOnIndexedTables
    bool HasEnableTtlOnIndexedTables() const;
    bool GetEnableTtlOnIndexedTables() const;
    void SetEnableTtlOnIndexedTables(bool value);
    void ClearEnableTtlOnIndexedTables();

    // Feature flag AllowUpdateChannelsBindingOfSolomonPartitions
    bool HasAllowUpdateChannelsBindingOfSolomonPartitions() const;
    bool GetAllowUpdateChannelsBindingOfSolomonPartitions() const;
    void SetAllowUpdateChannelsBindingOfSolomonPartitions(bool value);
    void ClearAllowUpdateChannelsBindingOfSolomonPartitions();

    // Feature flag DisableLegacyYql
    bool HasDisableLegacyYql() const;
    bool GetDisableLegacyYql() const;
    void SetDisableLegacyYql(bool value);
    void ClearDisableLegacyYql();

    // Feature flag EnableDataColumnForIndexTable
    bool HasEnableDataColumnForIndexTable() const;
    bool GetEnableDataColumnForIndexTable() const;
    void SetEnableDataColumnForIndexTable(bool value);
    void ClearEnableDataColumnForIndexTable();

    // Feature flag AllowServerlessStorageBillingForSchemeShard
    bool HasAllowServerlessStorageBillingForSchemeShard() const;
    bool GetAllowServerlessStorageBillingForSchemeShard() const;
    void SetAllowServerlessStorageBillingForSchemeShard(bool value);
    void ClearAllowServerlessStorageBillingForSchemeShard();

    // Feature flag EnableGracefulShutdown
    bool HasEnableGracefulShutdown() const;
    bool GetEnableGracefulShutdown() const;
    void SetEnableGracefulShutdown(bool value);
    void ClearEnableGracefulShutdown();

    // Feature flag EnableDrainOnShutdown
    bool HasEnableDrainOnShutdown() const;
    bool GetEnableDrainOnShutdown() const;
    void SetEnableDrainOnShutdown(bool value);
    void ClearEnableDrainOnShutdown();

    // Feature flag EnableConfigurationCache
    bool HasEnableConfigurationCache() const;
    bool GetEnableConfigurationCache() const;
    void SetEnableConfigurationCache(bool value);
    void ClearEnableConfigurationCache();

    // Feature flag EnableDbCounters
    bool HasEnableDbCounters() const;
    bool GetEnableDbCounters() const;
    void SetEnableDbCounters(bool value);
    void ClearEnableDbCounters();

    // Feature flag EnableClockGettimeForUserCpuAccounting
    bool HasEnableClockGettimeForUserCpuAccounting() const;
    bool GetEnableClockGettimeForUserCpuAccounting() const;
    void SetEnableClockGettimeForUserCpuAccounting(bool value);
    void ClearEnableClockGettimeForUserCpuAccounting();

    // Feature flag EnableAsyncIndexes
    bool HasEnableAsyncIndexes() const;
    bool GetEnableAsyncIndexes() const;
    void SetEnableAsyncIndexes(bool value);
    void ClearEnableAsyncIndexes();

    // Feature flag AllowStreamExecuteYqlScript
    bool HasAllowStreamExecuteYqlScript() const;
    bool GetAllowStreamExecuteYqlScript() const;
    void SetAllowStreamExecuteYqlScript(bool value);
    void ClearAllowStreamExecuteYqlScript();

    // Feature flag EnableKqpScanOverPersistentSnapshot
    bool HasEnableKqpScanOverPersistentSnapshot() const;
    bool GetEnableKqpScanOverPersistentSnapshot() const;
    void SetEnableKqpScanOverPersistentSnapshot(bool value);
    void ClearEnableKqpScanOverPersistentSnapshot();

    // Feature flag EnableOlapSchemaOperations
    bool HasEnableOlapSchemaOperations() const;
    bool GetEnableOlapSchemaOperations() const;
    void SetEnableOlapSchemaOperations(bool value);
    void ClearEnableOlapSchemaOperations();

    // Feature flag EnableVPatch
    bool HasEnableVPatch() const;
    bool GetEnableVPatch() const;
    void SetEnableVPatch(bool value);
    void ClearEnableVPatch();

    // Feature flag EnableMvccSnapshotReads
    bool HasEnableMvccSnapshotReads() const;
    bool GetEnableMvccSnapshotReads() const;
    void SetEnableMvccSnapshotReads(bool value);
    void ClearEnableMvccSnapshotReads();

    // Feature flag EnableSchemeTransactionsAtSchemeShard
    bool HasEnableSchemeTransactionsAtSchemeShard() const;
    bool GetEnableSchemeTransactionsAtSchemeShard() const;
    void SetEnableSchemeTransactionsAtSchemeShard(bool value);
    void ClearEnableSchemeTransactionsAtSchemeShard();

    // Feature flag EnableArrowFormatAtDatashard
    bool HasEnableArrowFormatAtDatashard() const;
    bool GetEnableArrowFormatAtDatashard() const;
    void SetEnableArrowFormatAtDatashard(bool value);
    void ClearEnableArrowFormatAtDatashard();

    // Feature flag Enable3x3RequestsForMirror3DCMinLatencyPut
    bool HasEnable3x3RequestsForMirror3DCMinLatencyPut() const;
    bool GetEnable3x3RequestsForMirror3DCMinLatencyPut() const;
    void SetEnable3x3RequestsForMirror3DCMinLatencyPut(bool value);
    void ClearEnable3x3RequestsForMirror3DCMinLatencyPut();

    // Feature flag EnableBackgroundCompaction
    bool HasEnableBackgroundCompaction() const;
    bool GetEnableBackgroundCompaction() const;
    void SetEnableBackgroundCompaction(bool value);
    void ClearEnableBackgroundCompaction();

    // Feature flag EnableArrowFormatInChannels
    bool HasEnableArrowFormatInChannels() const;
    bool GetEnableArrowFormatInChannels() const;
    void SetEnableArrowFormatInChannels(bool value);
    void ClearEnableArrowFormatInChannels();

    // Feature flag EnableBackgroundCompactionServerless
    bool HasEnableBackgroundCompactionServerless() const;
    bool GetEnableBackgroundCompactionServerless() const;
    void SetEnableBackgroundCompactionServerless(bool value);
    void ClearEnableBackgroundCompactionServerless();

    // Feature flag EnableNotNullColumns
    bool HasEnableNotNullColumns() const;
    bool GetEnableNotNullColumns() const;
    void SetEnableNotNullColumns(bool value);
    void ClearEnableNotNullColumns();

    // Feature flag EnableTtlOnAsyncIndexedTables
    bool HasEnableTtlOnAsyncIndexedTables() const;
    bool GetEnableTtlOnAsyncIndexedTables() const;
    void SetEnableTtlOnAsyncIndexedTables(bool value);
    void ClearEnableTtlOnAsyncIndexedTables();

    // Feature flag EnableBulkUpsertToAsyncIndexedTables
    bool HasEnableBulkUpsertToAsyncIndexedTables() const;
    bool GetEnableBulkUpsertToAsyncIndexedTables() const;
    void SetEnableBulkUpsertToAsyncIndexedTables(bool value);
    void ClearEnableBulkUpsertToAsyncIndexedTables();

    // Feature flag EnableNodeBrokerSingleDomainMode
    bool HasEnableNodeBrokerSingleDomainMode() const;
    bool GetEnableNodeBrokerSingleDomainMode() const;
    void SetEnableNodeBrokerSingleDomainMode(bool value);
    void ClearEnableNodeBrokerSingleDomainMode();

    // Feature flag EnablePublicApiExternalBlobs
    bool HasEnablePublicApiExternalBlobs() const;
    bool GetEnablePublicApiExternalBlobs() const;
    void SetEnablePublicApiExternalBlobs(bool value);
    void ClearEnablePublicApiExternalBlobs();

    // Feature flag EnablePublicApiKeepInMemory
    bool HasEnablePublicApiKeepInMemory() const;
    bool GetEnablePublicApiKeepInMemory() const;
    void SetEnablePublicApiKeepInMemory(bool value);
    void ClearEnablePublicApiKeepInMemory();

    // Feature flag EnableImplicitScanQueryInScripts
    bool HasEnableImplicitScanQueryInScripts() const;
    bool GetEnableImplicitScanQueryInScripts() const;
    void SetEnableImplicitScanQueryInScripts(bool value);
    void ClearEnableImplicitScanQueryInScripts();

    // Feature flag AllowVDiskDefrag
    bool HasAllowVDiskDefrag() const;
    bool GetAllowVDiskDefrag() const;
    void SetAllowVDiskDefrag(bool value);
    void ClearAllowVDiskDefrag();

    // Feature flag EnableAsyncHttpMon
    bool HasEnableAsyncHttpMon() const;
    bool GetEnableAsyncHttpMon() const;
    void SetEnableAsyncHttpMon(bool value);
    void ClearEnableAsyncHttpMon();

    // Feature flag EnableChangefeeds
    bool HasEnableChangefeeds() const;
    bool GetEnableChangefeeds() const;
    void SetEnableChangefeeds(bool value);
    void ClearEnableChangefeeds();

    // Feature flag EnableKqpScanQueryMultipleOlapShardsReads
    bool HasEnableKqpScanQueryMultipleOlapShardsReads() const;
    bool GetEnableKqpScanQueryMultipleOlapShardsReads() const;
    void SetEnableKqpScanQueryMultipleOlapShardsReads(bool value);
    void ClearEnableKqpScanQueryMultipleOlapShardsReads();

    // Feature flag EnableMoveIndex
    bool HasEnableMoveIndex() const;
    bool GetEnableMoveIndex() const;
    void SetEnableMoveIndex(bool value);
    void ClearEnableMoveIndex();

    // Feature flag EnableFailureInjectionTermination
    bool HasEnableFailureInjectionTermination() const;
    bool GetEnableFailureInjectionTermination() const;
    void SetEnableFailureInjectionTermination(bool value);
    void ClearEnableFailureInjectionTermination();

    // Feature flag EnableChunkLocking
    bool HasEnableChunkLocking() const;
    bool GetEnableChunkLocking() const;
    void SetEnableChunkLocking(bool value);
    void ClearEnableChunkLocking();

    // Feature flag EnableNotNullDataColumns
    bool HasEnableNotNullDataColumns() const;
    bool GetEnableNotNullDataColumns() const;
    void SetEnableNotNullDataColumns(bool value);
    void ClearEnableNotNullDataColumns();

    // Feature flag EnableGrpcAudit
    bool HasEnableGrpcAudit() const;
    bool GetEnableGrpcAudit() const;
    void SetEnableGrpcAudit(bool value);
    void ClearEnableGrpcAudit();

    // Feature flag EnableBorrowedSplitCompaction
    bool HasEnableBorrowedSplitCompaction() const;
    bool GetEnableBorrowedSplitCompaction() const;
    void SetEnableBorrowedSplitCompaction(bool value);
    void ClearEnableBorrowedSplitCompaction();

    // Feature flag EnableChangefeedInitialScan
    bool HasEnableChangefeedInitialScan() const;
    bool GetEnableChangefeedInitialScan() const;
    void SetEnableChangefeedInitialScan(bool value);
    void ClearEnableChangefeedInitialScan();

    // Feature flag EnableDynamicNodeAuthorization
    bool HasEnableDynamicNodeAuthorization() const;
    bool GetEnableDynamicNodeAuthorization() const;
    void SetEnableDynamicNodeAuthorization(bool value);
    void ClearEnableDynamicNodeAuthorization();

    // Feature flag EnableDataShardGenericReadSets
    bool HasEnableDataShardGenericReadSets() const;
    bool GetEnableDataShardGenericReadSets() const;
    void SetEnableDataShardGenericReadSets(bool value);
    void ClearEnableDataShardGenericReadSets();

    // Feature flag EnableAlterDatabaseCreateHiveFirst
    bool HasEnableAlterDatabaseCreateHiveFirst() const;
    bool GetEnableAlterDatabaseCreateHiveFirst() const;
    void SetEnableAlterDatabaseCreateHiveFirst(bool value);
    void ClearEnableAlterDatabaseCreateHiveFirst();

    // Feature flag EnableSmallDiskOptimization
    bool HasEnableSmallDiskOptimization() const;
    bool GetEnableSmallDiskOptimization() const;
    void SetEnableSmallDiskOptimization(bool value);
    void ClearEnableSmallDiskOptimization();

    // Feature flag EnableDataShardVolatileTransactions
    bool HasEnableDataShardVolatileTransactions() const;
    bool GetEnableDataShardVolatileTransactions() const;
    void SetEnableDataShardVolatileTransactions(bool value);
    void ClearEnableDataShardVolatileTransactions();

    // Feature flag EnableTopicServiceTx
    bool HasEnableTopicServiceTx() const;
    bool GetEnableTopicServiceTx() const;
    void SetEnableTopicServiceTx(bool value);
    void ClearEnableTopicServiceTx();

    // Feature flag EnableLLVMCache
    bool HasEnableLLVMCache() const;
    bool GetEnableLLVMCache() const;
    void SetEnableLLVMCache(bool value);
    void ClearEnableLLVMCache();

    // Feature flag EnableExternalDataSources
    bool HasEnableExternalDataSources() const;
    bool GetEnableExternalDataSources() const;
    void SetEnableExternalDataSources(bool value);
    void ClearEnableExternalDataSources();

    // Feature flag EnableTopicDiskSubDomainQuota
    bool HasEnableTopicDiskSubDomainQuota() const;
    bool GetEnableTopicDiskSubDomainQuota() const;
    void SetEnableTopicDiskSubDomainQuota(bool value);
    void ClearEnableTopicDiskSubDomainQuota();

    // Feature flag EnableSeparationComputeActorsFromRead
    bool HasEnableSeparationComputeActorsFromRead() const;
    bool GetEnableSeparationComputeActorsFromRead() const;
    void SetEnableSeparationComputeActorsFromRead(bool value);
    void ClearEnableSeparationComputeActorsFromRead();

    // Feature flag EnablePQConfigTransactionsAtSchemeShard
    bool HasEnablePQConfigTransactionsAtSchemeShard() const;
    bool GetEnablePQConfigTransactionsAtSchemeShard() const;
    void SetEnablePQConfigTransactionsAtSchemeShard(bool value);
    void ClearEnablePQConfigTransactionsAtSchemeShard();

    // Feature flag EnableScriptExecutionOperations
    bool HasEnableScriptExecutionOperations() const;
    bool GetEnableScriptExecutionOperations() const;
    void SetEnableScriptExecutionOperations(bool value);
    void ClearEnableScriptExecutionOperations();

    // Feature flag EnableImplicitQueryParameterTypes
    bool HasEnableImplicitQueryParameterTypes() const;
    bool GetEnableImplicitQueryParameterTypes() const;
    void SetEnableImplicitQueryParameterTypes(bool value);
    void ClearEnableImplicitQueryParameterTypes();

    // Feature flag EnableForceImmediateEffectsExecution
    bool HasEnableForceImmediateEffectsExecution() const;
    bool GetEnableForceImmediateEffectsExecution() const;
    void SetEnableForceImmediateEffectsExecution(bool value);
    void ClearEnableForceImmediateEffectsExecution();

    // Feature flag EnableTopicSplitMerge
    bool HasEnableTopicSplitMerge() const;
    bool GetEnableTopicSplitMerge() const;
    void SetEnableTopicSplitMerge(bool value);
    void ClearEnableTopicSplitMerge();

    // Feature flag EnableChangefeedDynamoDBStreamsFormat
    bool HasEnableChangefeedDynamoDBStreamsFormat() const;
    bool GetEnableChangefeedDynamoDBStreamsFormat() const;
    void SetEnableChangefeedDynamoDBStreamsFormat(bool value);
    void ClearEnableChangefeedDynamoDBStreamsFormat();

    // Feature flag ForceColumnTablesCompositeMarks
    bool HasForceColumnTablesCompositeMarks() const;
    bool GetForceColumnTablesCompositeMarks() const;
    void SetForceColumnTablesCompositeMarks(bool value);
    void ClearForceColumnTablesCompositeMarks();

    // Feature flag EnableSubscriptionsInDiscovery
    bool HasEnableSubscriptionsInDiscovery() const;
    bool GetEnableSubscriptionsInDiscovery() const;
    void SetEnableSubscriptionsInDiscovery(bool value);
    void ClearEnableSubscriptionsInDiscovery();

    // Feature flag EnableGetNodeLabels
    bool HasEnableGetNodeLabels() const;
    bool GetEnableGetNodeLabels() const;
    void SetEnableGetNodeLabels(bool value);
    void ClearEnableGetNodeLabels();

    // Feature flag EnableTopicMessageMeta
    bool HasEnableTopicMessageMeta() const;
    bool GetEnableTopicMessageMeta() const;
    void SetEnableTopicMessageMeta(bool value);
    void ClearEnableTopicMessageMeta();

    // Feature flag EnableIcNodeCache
    bool HasEnableIcNodeCache() const;
    bool GetEnableIcNodeCache() const;
    void SetEnableIcNodeCache(bool value);
    void ClearEnableIcNodeCache();

    // Feature flag EnableTempTables
    bool HasEnableTempTables() const;
    bool GetEnableTempTables() const;
    void SetEnableTempTables(bool value);
    void ClearEnableTempTables();

    // Feature flag SuppressCompatibilityCheck
    bool HasSuppressCompatibilityCheck() const;
    bool GetSuppressCompatibilityCheck() const;
    void SetSuppressCompatibilityCheck(bool value);
    void ClearSuppressCompatibilityCheck();

    // Feature flag EnableUniqConstraint
    bool HasEnableUniqConstraint() const;
    bool GetEnableUniqConstraint() const;
    void SetEnableUniqConstraint(bool value);
    void ClearEnableUniqConstraint();

    // Feature flag EnableChangefeedDebeziumJsonFormat
    bool HasEnableChangefeedDebeziumJsonFormat() const;
    bool GetEnableChangefeedDebeziumJsonFormat() const;
    void SetEnableChangefeedDebeziumJsonFormat(bool value);
    void ClearEnableChangefeedDebeziumJsonFormat();

    // Feature flag EnableStatistics
    bool HasEnableStatistics() const;
    bool GetEnableStatistics() const;
    void SetEnableStatistics(bool value);
    void ClearEnableStatistics();

    // Feature flag EnableUuidAsPrimaryKey
    bool HasEnableUuidAsPrimaryKey() const;
    bool GetEnableUuidAsPrimaryKey() const;
    void SetEnableUuidAsPrimaryKey(bool value);
    void ClearEnableUuidAsPrimaryKey();

    // Feature flag EnableTablePgTypes
    bool HasEnableTablePgTypes() const;
    bool GetEnableTablePgTypes() const;
    void SetEnableTablePgTypes(bool value);
    void ClearEnableTablePgTypes();

    // Feature flag EnableLocalDBBtreeIndex
    bool HasEnableLocalDBBtreeIndex() const;
    bool GetEnableLocalDBBtreeIndex() const;
    void SetEnableLocalDBBtreeIndex(bool value);
    void ClearEnableLocalDBBtreeIndex();

    // Feature flag EnablePDiskHighHDDInFlight
    bool HasEnablePDiskHighHDDInFlight() const;
    bool GetEnablePDiskHighHDDInFlight() const;
    void SetEnablePDiskHighHDDInFlight(bool value);
    void ClearEnablePDiskHighHDDInFlight();

    // Feature flag EnableViews
    bool HasEnableViews() const;
    bool GetEnableViews() const;
    void SetEnableViews(bool value);
    void ClearEnableViews();

    // Feature flag EnableServerlessExclusiveDynamicNodes
    bool HasEnableServerlessExclusiveDynamicNodes() const;
    bool GetEnableServerlessExclusiveDynamicNodes() const;
    void SetEnableServerlessExclusiveDynamicNodes(bool value);
    void ClearEnableServerlessExclusiveDynamicNodes();

    // Feature flag EnableAccessServiceBulkAuthorization
    bool HasEnableAccessServiceBulkAuthorization() const;
    bool GetEnableAccessServiceBulkAuthorization() const;
    void SetEnableAccessServiceBulkAuthorization(bool value);
    void ClearEnableAccessServiceBulkAuthorization();

    // Feature flag EnableAddColumsWithDefaults
    bool HasEnableAddColumsWithDefaults() const;
    bool GetEnableAddColumsWithDefaults() const;
    void SetEnableAddColumsWithDefaults(bool value);
    void ClearEnableAddColumsWithDefaults();

    // Feature flag EnableReplaceIfExistsForExternalEntities
    bool HasEnableReplaceIfExistsForExternalEntities() const;
    bool GetEnableReplaceIfExistsForExternalEntities() const;
    void SetEnableReplaceIfExistsForExternalEntities(bool value);
    void ClearEnableReplaceIfExistsForExternalEntities();

    // Feature flag EnableCMSRequestPriorities
    bool HasEnableCMSRequestPriorities() const;
    bool GetEnableCMSRequestPriorities() const;
    void SetEnableCMSRequestPriorities(bool value);
    void ClearEnableCMSRequestPriorities();

    // Feature flag EnableKeyvalueLogBatching
    bool HasEnableKeyvalueLogBatching() const;
    bool GetEnableKeyvalueLogBatching() const;
    void SetEnableKeyvalueLogBatching(bool value);
    void ClearEnableKeyvalueLogBatching();

    // Feature flag EnableLocalDBFlatIndex
    bool HasEnableLocalDBFlatIndex() const;
    bool GetEnableLocalDBFlatIndex() const;
    void SetEnableLocalDBFlatIndex(bool value);
    void ClearEnableLocalDBFlatIndex();

    // Feature flag ExtendedVDiskCounters
    bool HasExtendedVDiskCounters() const;
    bool GetExtendedVDiskCounters() const;
    void SetExtendedVDiskCounters(bool value);
    void ClearExtendedVDiskCounters();

    // Feature flag ExtendedPDiskSensors
    bool HasExtendedPDiskSensors() const;
    bool GetExtendedPDiskSensors() const;
    void SetExtendedPDiskSensors(bool value);
    void ClearExtendedPDiskSensors();

    // Feature flag EnableStableNodeNames
    bool HasEnableStableNodeNames() const;
    bool GetEnableStableNodeNames() const;
    void SetEnableStableNodeNames(bool value);
    void ClearEnableStableNodeNames();

    // Feature flag EnableBackupService
    bool HasEnableBackupService() const;
    bool GetEnableBackupService() const;
    void SetEnableBackupService(bool value);
    void ClearEnableBackupService();

    // Feature flag EnableVolatileTransactionArbiters
    bool HasEnableVolatileTransactionArbiters() const;
    bool GetEnableVolatileTransactionArbiters() const;
    void SetEnableVolatileTransactionArbiters(bool value);
    void ClearEnableVolatileTransactionArbiters();

    // Feature flag EnableGraphShard
    bool HasEnableGraphShard() const;
    bool GetEnableGraphShard() const;
    void SetEnableGraphShard(bool value);
    void ClearEnableGraphShard();

    // Feature flag EnableExternalSourceSchemaInference
    bool HasEnableExternalSourceSchemaInference() const;
    bool GetEnableExternalSourceSchemaInference() const;
    void SetEnableExternalSourceSchemaInference(bool value);
    void ClearEnableExternalSourceSchemaInference();

    // Feature flag EnableDbMetadataCache
    bool HasEnableDbMetadataCache() const;
    bool GetEnableDbMetadataCache() const;
    void SetEnableDbMetadataCache(bool value);
    void ClearEnableDbMetadataCache();

    // Feature flag EnableTableDatetime64
    bool HasEnableTableDatetime64() const;
    bool GetEnableTableDatetime64() const;
    void SetEnableTableDatetime64(bool value);
    void ClearEnableTableDatetime64();

    // Feature flag EnableResourcePools
    bool HasEnableResourcePools() const;
    bool GetEnableResourcePools() const;
    void SetEnableResourcePools(bool value);
    void ClearEnableResourcePools();

    // Feature flag EnableColumnStatistics
    bool HasEnableColumnStatistics() const;
    bool GetEnableColumnStatistics() const;
    void SetEnableColumnStatistics(bool value);
    void ClearEnableColumnStatistics();

    // Feature flag EnableSingleCompositeActionGroup
    bool HasEnableSingleCompositeActionGroup() const;
    bool GetEnableSingleCompositeActionGroup() const;
    void SetEnableSingleCompositeActionGroup(bool value);
    void ClearEnableSingleCompositeActionGroup();

    // Feature flag EnableResourcePoolsOnServerless
    bool HasEnableResourcePoolsOnServerless() const;
    bool GetEnableResourcePoolsOnServerless() const;
    void SetEnableResourcePoolsOnServerless(bool value);
    void ClearEnableResourcePoolsOnServerless();

    // Feature flag EnableVectorIndex
    bool HasEnableVectorIndex() const;
    bool GetEnableVectorIndex() const;
    void SetEnableVectorIndex(bool value);
    void ClearEnableVectorIndex();

    // Feature flag EnableChangefeedsOnIndexTables
    bool HasEnableChangefeedsOnIndexTables() const;
    bool GetEnableChangefeedsOnIndexTables() const;
    void SetEnableChangefeedsOnIndexTables(bool value);
    void ClearEnableChangefeedsOnIndexTables();

    // Feature flag EnableResourcePoolsCounters
    bool HasEnableResourcePoolsCounters() const;
    bool GetEnableResourcePoolsCounters() const;
    void SetEnableResourcePoolsCounters(bool value);
    void ClearEnableResourcePoolsCounters();

    // Feature flag EnableOptionalColumnsInColumnShard
    bool HasEnableOptionalColumnsInColumnShard() const;
    bool GetEnableOptionalColumnsInColumnShard() const;
    void SetEnableOptionalColumnsInColumnShard(bool value);
    void ClearEnableOptionalColumnsInColumnShard();

    // Feature flag EnableGranularTimecast
    bool HasEnableGranularTimecast() const;
    bool GetEnableGranularTimecast() const;
    void SetEnableGranularTimecast(bool value);
    void ClearEnableGranularTimecast();

    // Feature flag EnableAlterShardingInColumnShard
    bool HasEnableAlterShardingInColumnShard() const;
    bool GetEnableAlterShardingInColumnShard() const;
    void SetEnableAlterShardingInColumnShard(bool value);
    void ClearEnableAlterShardingInColumnShard();

    // Feature flag EnablePgSyntax
    bool HasEnablePgSyntax() const;
    bool GetEnablePgSyntax() const;
    void SetEnablePgSyntax(bool value);
    void ClearEnablePgSyntax();

    // Feature flag EnableTieringInColumnShard
    bool HasEnableTieringInColumnShard() const;
    bool GetEnableTieringInColumnShard() const;
    void SetEnableTieringInColumnShard(bool value);
    void ClearEnableTieringInColumnShard();

    // Feature flag EnableMetadataObjectsOnServerless
    bool HasEnableMetadataObjectsOnServerless() const;
    bool GetEnableMetadataObjectsOnServerless() const;
    void SetEnableMetadataObjectsOnServerless(bool value);
    void ClearEnableMetadataObjectsOnServerless();

    // Feature flag EnableOlapCompression
    bool HasEnableOlapCompression() const;
    bool GetEnableOlapCompression() const;
    void SetEnableOlapCompression(bool value);
    void ClearEnableOlapCompression();

    // Feature flag EnableExternalDataSourcesOnServerless
    bool HasEnableExternalDataSourcesOnServerless() const;
    bool GetEnableExternalDataSourcesOnServerless() const;
    void SetEnableExternalDataSourcesOnServerless(bool value);
    void ClearEnableExternalDataSourcesOnServerless();

    // Feature flag EnableSparsedColumns
    bool HasEnableSparsedColumns() const;
    bool GetEnableSparsedColumns() const;
    void SetEnableSparsedColumns(bool value);
    void ClearEnableSparsedColumns();

    // Feature flag EnableParameterizedDecimal
    bool HasEnableParameterizedDecimal() const;
    bool GetEnableParameterizedDecimal() const;
    void SetEnableParameterizedDecimal(bool value);
    void ClearEnableParameterizedDecimal();

    // Feature flag EnableImmediateWritingOnBulkUpsert
    bool HasEnableImmediateWritingOnBulkUpsert() const;
    bool GetEnableImmediateWritingOnBulkUpsert() const;
    void SetEnableImmediateWritingOnBulkUpsert(bool value);
    void ClearEnableImmediateWritingOnBulkUpsert();

    // Feature flag EnableInsertWriteIdSpecialColumnCompatibility
    bool HasEnableInsertWriteIdSpecialColumnCompatibility() const;
    bool GetEnableInsertWriteIdSpecialColumnCompatibility() const;
    void SetEnableInsertWriteIdSpecialColumnCompatibility(bool value);
    void ClearEnableInsertWriteIdSpecialColumnCompatibility();

    // Feature flag EnableTopicAutopartitioningForCDC
    bool HasEnableTopicAutopartitioningForCDC() const;
    bool GetEnableTopicAutopartitioningForCDC() const;
    void SetEnableTopicAutopartitioningForCDC(bool value);
    void ClearEnableTopicAutopartitioningForCDC();

    // Feature flag EnableWritePortionsOnInsert
    bool HasEnableWritePortionsOnInsert() const;
    bool GetEnableWritePortionsOnInsert() const;
    void SetEnableWritePortionsOnInsert(bool value);
    void ClearEnableWritePortionsOnInsert();


private:
    static std::tuple<ui64, ui64> BitsFromProto_slot0(const NKikimrConfig::TFeatureFlags& flags);
    static ui64 FromProto_slot0(const NKikimrConfig::TFeatureFlags& flags, ui64 value);
    void Update_slot0(ui64 bits, ui64 mask);
    static std::tuple<ui64, ui64> BitsFromProto_slot1(const NKikimrConfig::TFeatureFlags& flags);
    static ui64 FromProto_slot1(const NKikimrConfig::TFeatureFlags& flags, ui64 value);
    void Update_slot1(ui64 bits, ui64 mask);
    static std::tuple<ui64, ui64> BitsFromProto_slot2(const NKikimrConfig::TFeatureFlags& flags);
    static ui64 FromProto_slot2(const NKikimrConfig::TFeatureFlags& flags, ui64 value);
    void Update_slot2(ui64 bits, ui64 mask);
    static std::tuple<ui64, ui64> BitsFromProto_slot3(const NKikimrConfig::TFeatureFlags& flags);
    static ui64 FromProto_slot3(const NKikimrConfig::TFeatureFlags& flags, ui64 value);
    void Update_slot3(ui64 bits, ui64 mask);
    static std::tuple<ui64, ui64> BitsFromProto_slot4(const NKikimrConfig::TFeatureFlags& flags);
    static ui64 FromProto_slot4(const NKikimrConfig::TFeatureFlags& flags, ui64 value);
    void Update_slot4(ui64 bits, ui64 mask);

private:
    std::atomic<ui64> slot0_;
    std::atomic<ui64> slot1_;
    std::atomic<ui64> slot2_;
    std::atomic<ui64> slot3_;
    std::atomic<ui64> slot4_;
};

} // namespace NKikimr